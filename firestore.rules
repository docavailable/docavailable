rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read and write their own data
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Users can read other users' basic info (for doctor/patient matching)
    match /users/{userId} {
      allow read: if request.auth != null;
    }
    
    // Appointments - users can read/write their own appointments
    match /appointments/{appointmentId} {
      allow read, write: if request.auth != null && 
        (resource.data.patientId == request.auth.uid || 
         resource.data.doctorId == request.auth.uid);
    }
    
    // Doctor ratings - patients can read, doctors can read their own ratings
    match /doctorRatings/{ratingId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        (resource.data.patientId == request.auth.uid || 
         resource.data.doctorId == request.auth.uid);
    }
    
    // Subscriptions - users can read/write their own subscriptions
    match /subscriptions/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Calls - users can read/write calls they're involved in
    match /calls/{callId} {
      allow read, write: if request.auth != null && 
        (resource.data.callerId == request.auth.uid || 
         resource.data.receiverId == request.auth.uid);
    }
    
    // Chat messages - users can read/write messages in their chats
    match /chats/{chatId}/messages/{messageId} {
      allow read, write: if request.auth != null && 
        (resource.data.senderId == request.auth.uid || 
         chatId.matches(request.auth.uid + '.*') || 
         chatId.matches('.*' + request.auth.uid));
    }
  }
}