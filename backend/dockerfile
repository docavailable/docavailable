FROM php:8.2-cli

# Install system dependencies
RUN apt-get update && apt-get install -y \
    git \
    curl \
    libpng-dev \
    libonig-dev \
    libxml2-dev \
    libzip-dev \
    zip \
    unzip \
    libpq-dev \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Install PHP extensions
RUN docker-php-ext-install pdo_pgsql mbstring exif pcntl bcmath gd zip

# Get Composer
COPY --from=composer:latest /usr/bin/composer /usr/bin/composer

# Set working directory
WORKDIR /var/www

# Copy application
COPY . .

# Fix composer lock and install dependencies
RUN rm -f composer.lock && composer install --no-dev --optimize-autoloader --no-interaction

# Set permissions
RUN chown -R www-data:www-data /var/www && chmod -R 755 /var/www

# Create storage directories
RUN mkdir -p storage/framework/{sessions,views,cache} storage/logs \
    && chmod -R 775 storage bootstrap/cache

# Environment variables will be provided by Digital Ocean
# No need to create .env file as it will override environment variables

# Start the application - generate key, try migrations, then start server
CMD ["sh", "-c", "echo '=== LARAVEL STARTUP ===' && php artisan config:clear && php artisan cache:clear && php artisan route:clear && php artisan view:clear && echo 'Testing database connection...' && php artisan tinker --execute='DB::connection()->getPdo(); echo \"Database connected successfully\";' && echo 'Running migrations...' && php artisan migrate --force || echo 'Migration failed, continuing anyway' && echo 'Starting Laravel server...' && php -S 0.0.0.0:8080 -t public"]
