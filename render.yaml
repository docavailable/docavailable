services:
  - type: web
    name: docavailable-backend
    env: php
    buildFilter:
      paths:
        - backend/**
    buildCommand: |
      # Force fresh build by updating timestamp
      echo "=== Build timestamp: $(date) - PHP environment test ==="
      echo "=== CACHE BUSTER: $(date +%s) ==="
      cd backend
      echo "=== Debug: Current directory ===" && pwd
      echo "=== Debug: Files in current directory ===" && ls -la
      echo "=== Debug: Files in public directory ===" && ls -la public/
      
      # Remove problematic files that cause autoloader issues
      echo "=== Cleaning up autoloader issues ==="
      rm -f database/seeders/Plan.php
      rm -f app/Http/Controllers/Auth/AuthenticationController_fixed.php
      
      # Clear composer cache and install dependencies
      echo "=== Clearing composer cache ==="
      composer clear-cache
      
      # Force remove vendor directory to ensure fresh install
      echo "=== Removing vendor directory for fresh install ==="
      rm -rf vendor/
      rm -f composer.lock
      
      # Create unique build identifier to bust cache
      echo "BUILD_ID_$(date +%s)" > .build_id
      
      # Install dependencies with optimized autoloader
      echo "=== Installing dependencies ==="
      composer install --optimize-autoloader --no-interaction --prefer-dist --no-progress
      
      # Regenerate autoloader to ensure all classes are properly mapped
      echo "=== Regenerating autoloader ==="
      composer dump-autoload --optimize
      
      # Generate application keys
      php artisan key:generate --force
      php artisan jwt:secret --force
      php artisan storage:link
      
      # Clear all caches to ensure clean state
      echo "=== Clearing caches ==="
      php artisan config:clear
      php artisan cache:clear
      php artisan route:clear
      php artisan view:clear
      
      echo "=== Build completed successfully ==="
    startCommand: |
      cd backend
      echo "=== Debug: Starting application ==="
      echo "=== Debug: Current directory ===" && pwd
      echo "=== Debug: Files in public directory ===" && ls -la public/
      
      # Final cache clear before starting
      php artisan config:clear
      php artisan cache:clear
      php artisan route:clear
      php artisan view:clear
      
      # Run migrations and seeders
      php artisan migrate --force
      php artisan db:seed --force
      
      echo "=== Debug: Starting PHP server with router.php ==="
      php -S 0.0.0.0:$PORT -t public public/router.php
    rootDir: backend
    envVars:
      - key: APP_NAME
        value: DocAvailable
      - key: APP_ENV
        value: production
      - key: APP_DEBUG
        value: false
      - key: APP_TIMEZONE
        value: UTC
      - key: APP_LOCALE
        value: en
      - key: APP_FALLBACK_LOCALE
        value: en
      - key: APP_FAKER_LOCALE
        value: en_US
      - key: LOG_CHANNEL
        value: stack
      - key: LOG_DEPRECATIONS_CHANNEL
        value: null
      - key: LOG_LEVEL
        value: error
      - key: CACHE_STORE
        value: database
      - key: CACHE_PREFIX
        value: laravel-cache-
      - key: QUEUE_CONNECTION
        value: database
      - key: QUEUE_FAILED_DRIVER
        value: database-uuids
      - key: SESSION_DRIVER
        value: database
      - key: SESSION_LIFETIME
        value: 120
      - key: FILESYSTEM_DISK
        value: local
      - key: DB_CONNECTION
        value: pgsql_simple
      - key: DB_HOST
        value: ep-hidden-brook-aemmopjb-pooler.c-2.us-east-2.aws.neon.tech
      - key: DB_PORT
        value: 5432
      - key: DB_DATABASE
        value: neondb
      - key: DB_USERNAME
        value: neondb_owner
      - key: DB_PASSWORD
        value: ${DB_PASSWORD}
      - key: DB_URL
        value: postgresql://neondb_owner:${DB_PASSWORD}@ep-hidden-brook-aemmopjb-pooler.c-2.us-east-2.aws.neon.tech/neondb?sslmode=require&options=endpoint%3Dep-hidden-brook-aemmopjb
      - key: DB_SSLMODE
        value: require
      - key: DB_CHARSET
        value: utf8
      - key: DB_CONNECT_TIMEOUT
        value: 10
      - key: DB_SOCKET_TIMEOUT
        value: 30
      - key: DB_PERSISTENT
        value: false
      - key: BROADCAST_DRIVER
        value: log
      - key: CACHE_DRIVER
        value: file
      - key: SESSION_LIFETIME
        value: 120
      - key: MEMCACHED_HOST
        value: 127.0.0.1
      - key: REDIS_HOST
        value: 127.0.0.1
      - key: REDIS_PASSWORD
        value: null
      - key: REDIS_PORT
        value: 6379
      - key: MAIL_MAILER
        value: smtp
      - key: MAIL_HOST
        value: mailpit
      - key: MAIL_PORT
        value: 1025
      - key: MAIL_USERNAME
        value: null
      - key: MAIL_PASSWORD
        value: null
      - key: MAIL_ENCRYPTION
        value: null
      - key: MAIL_FROM_ADDRESS
        value: "hello@example.com"
      - key: MAIL_FROM_NAME
        value: "${APP_NAME}"
      - key: AWS_ACCESS_KEY_ID
        value: ""
      - key: AWS_SECRET_ACCESS_KEY
        value: ""
      - key: AWS_DEFAULT_REGION
        value: us-east-1
      - key: AWS_BUCKET
        value: ""
      - key: AWS_USE_PATH_STYLE_ENDPOINT
        value: false
      - key: PUSHER_APP_ID
        value: ""
      - key: PUSHER_APP_KEY
        value: ""
      - key: PUSHER_APP_SECRET
        value: ""
      - key: PUSHER_HOST
        value: ""
      - key: PUSHER_PORT
        value: 443
      - key: PUSHER_SCHEME
        value: https
      - key: PUSHER_APP_CLUSTER
        value: mt1
      - key: VITE_APP_NAME
        value: "${APP_NAME}"
      - key: VITE_PUSHER_APP_KEY
        value: "${PUSHER_APP_KEY}"
      - key: VITE_PUSHER_HOST
        value: "${PUSHER_HOST}"
      - key: VITE_PUSHER_PORT
        value: "${PUSHER_PORT}"
      - key: VITE_PUSHER_SCHEME
        value: "${PUSHER_SCHEME}"
      - key: VITE_PUSHER_APP_CLUSTER
        value: "${PUSHER_APP_CLUSTER}" 