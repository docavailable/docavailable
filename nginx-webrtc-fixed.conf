# WebRTC Call Signaling Server - Fixed HTTPS Configuration
# This configuration properly handles WebSocket upgrades

# Redirect all HTTP traffic to HTTPS
server {
    listen 80;
    server_name docavailable.org www.docavailable.org;
    return 301 https://$server_name$request_uri;
}

# Main HTTPS server block
server {
    listen 443 ssl;
    http2 on;
    server_name docavailable.org www.docavailable.org;

    # SSL Configuration
    ssl_certificate /etc/letsencrypt/live/docavailable.org/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/docavailable.org/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Security Headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; connect-src 'self' wss: https:; font-src 'self'; object-src 'none'; media-src 'self'; frame-src 'none';" always;
    
    # WebRTC Call Signaling - FIXED WebSocket Configuration
    location /call-signaling {
        # Proxy to the call server
        proxy_pass http://localhost:8080;
        
        # WebSocket upgrade configuration
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # Standard proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # WebSocket specific settings
        proxy_read_timeout 86400;
        proxy_send_timeout 86400;
        proxy_connect_timeout 86400;
        proxy_buffering off;
        proxy_request_buffering off;
        
        # CORS headers for WebSocket
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Content-Type, Authorization" always;
    }
    
    # WebRTC Chat Signaling
    location /chat-signaling {
        # Proxy to the chat server
        proxy_pass http://localhost:8081;
        
        # WebSocket upgrade configuration
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # Standard proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # WebSocket specific settings
        proxy_read_timeout 86400;
        proxy_send_timeout 86400;
        proxy_connect_timeout 86400;
        proxy_buffering off;
        proxy_request_buffering off;
        
        # CORS headers for WebSocket
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Content-Type, Authorization" always;
    }
    
    # Health check endpoints
    location /call-health {
        proxy_pass http://localhost:8080/health;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        add_header Access-Control-Allow-Origin "*" always;
        add_header X-Cache-Status $upstream_cache_status;
    }
    
    location /chat-health {
        proxy_pass http://localhost:8081/health;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        add_header Access-Control-Allow-Origin "*" always;
        add_header X-Cache-Status $upstream_cache_status;
    }
    
    location /webrtc-health {
        proxy_pass http://localhost:8080/health;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        add_header Access-Control-Allow-Origin "*" always;
        add_header X-Cache-Status $upstream_cache_status;
    }

    # Root endpoint - Service information
    location / {
        return 200 'DocAvailable WebRTC Services - HTTPS Only\n\nCall Signaling: wss://docavailable.org/call-signaling\nChat Signaling: wss://docavailable.org/chat-signaling\n\nHealth Checks:\n- Call Server: https://docavailable.org/call-health\n- Chat Server: https://docavailable.org/chat-health\n- Combined: https://docavailable.org/webrtc-health\n\nSecurity: HTTPS Only - All HTTP traffic redirected to HTTPS';
        add_header Content-Type text/plain;
    }

    # Block access to sensitive files
    location ~ /\. {
        deny all;
        return 404;
    }
    
    location ~ \.(env|log|conf)$ {
        deny all;
        return 404;
    }
}